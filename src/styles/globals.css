/* font */
@font-face {
  font-family: 'Pretendard';
  src: url('/fonts/Pretendard-Thin.otf') format('opentype');
  font-weight: 100;
  font-style: normal;
}
@font-face {
  font-family: 'Pretendard';
  src: url('/fonts/Pretendard-ExtraLight.otf') format('opentype');
  font-weight: 200;
  font-style: normal;
}
@font-face {
  font-family: 'Pretendard';
  src: url('/fonts/Pretendard-Light.otf') format('opentype');
  font-weight: 300;
  font-style: normal;
}
@font-face {
  font-family: 'Pretendard';
  src: url('/fonts/Pretendard-Regular.otf') format('opentype');
  font-weight: 400;
  font-style: normal;
}
@font-face {
  font-family: 'Pretendard';
  src: url('/fonts/Pretendard-Medium.otf') format('opentype');
  font-weight: 500;
  font-style: normal;
}
@font-face {
  font-family: 'Pretendard';
  src: url('/fonts/Pretendard-SemiBold.otf') format('opentype');
  font-weight: 600;
  font-style: normal;
}
@font-face {
  font-family: 'Pretendard';
  src: url('/fonts/Pretendard-Bold.otf') format('opentype');
  font-weight: 700;
  font-style: normal;
}
@font-face {
  font-family: 'Pretendard';
  src: url('/fonts/Pretendard-ExtraBold.otf') format('opentype');
  font-weight: 800;
  font-style: normal;
}
@font-face {
  font-family: 'Pretendard';
  src: url('/fonts/Pretendard-Black.otf') format('opentype');
  font-weight: 900;
  font-style: normal;
}

/* global style */
* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
  font-family: Pretendard;
}

html,
body {
  max-width: 100vw;
  height: 100%;
  background-color: #f6f9f7;
}

body {
  position: relative;
}
#__next {
  min-height: 100%;
  position: relative;
  padding-bottom: 180px;
}
a {
  color: inherit;
  text-decoration: none;
}
li {
  list-style: none;
}
input,
textarea,
select {
  border: none;
}
input:focus,
textarea:focus,
select:focus {
  outline: none;
}
input:-webkit-autofill {
  -webkit-box-shadow: 0 0 0 30px transparent inset;
  -webkit-text-fill-color: #000;
}
input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus,
input:-webkit-autofill:active {
  transition: background-color 5000s ease-in-out 0s;
}
button {
  background: inherit;
  border: none;
  box-shadow: none;
  border-radius: 0;
  padding: 0;
  overflow: visible;
  cursor: pointer;
}
table {
  border-collapse: collapse;
}

.wrap {
  padding-bottom: 100px;
}
.first_content {
  width: 100%;
  padding-top: 150px;
  padding-bottom: 100px;
}
.layout_size {
  width: 100%;
  max-width: 1300px;
  padding: 0 20px;
  margin: 0 auto;
  position: relative;
}

.fullScreen_loading {
  position: fixed;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  z-index: 20;
}
.backdrop_loading {
  position: fixed;
  width: 100vw;
  height: 100vh;
  background-color: black;
  opacity: 0.5;
  z-index: 10;
}

/* modal */
.modalBox {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 500px;
  height: 200px;
  background-color: #fff;
  padding: 24px;
  z-index: 100;
  border-radius: 10px;
}
.modalBox_bg {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  z-index: 60;
}
.modalTop {
  display: flex;
  align-items: center;
  justify-content: space-between;
}
.modalTitle {
  font-size: 20px;
  font-weight: 700;
}
.modalCon {
  font-size: 20px;
}
.modalBtn_area {
  display: flex;
  align-items: center;
  justify-content: flex-end;
  gap: 20px;
}
.modalBtn_area p {
  padding: 8px 0;
  width: 80px;
  text-align: center;
  border-radius: 10px;
  cursor: pointer;
  transition: all 0.2s;
  background-color: #adb4ad;
}
.modalBtn_area p:hover {
  background-color: #adb4ad;
  color: #fff;
}

/* 로딩 */
.loaderBox {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 100;
}
.loader {
  width: 80px;
  padding: 8px;
  aspect-ratio: 1;
  border-radius: 50%;
  background: #25b09b;
  --_m: conic-gradient(#0000 10%, #000), linear-gradient(#000 0 0) content-box;
  -webkit-mask: var(--_m);
  mask: var(--_m);
  -webkit-mask-composite: source-out;
  mask-composite: subtract;
  animation: load 1s infinite linear;
}
@keyframes load {
  to {
    transform: rotate(1turn);
  }
}
